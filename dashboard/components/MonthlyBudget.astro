---
import data from './data/monthlyBudget.json';

const YEAR = '2025';
const MONTH_LABELS = ['1월','2월','3월','4월','5월','6월','7월','8월','9월','10월','11월','12월'];
const MONTH_KEYS   = ['January','February','March','April','May','June','July','August','September','October','November','December'];

const allocated = MONTH_KEYS.map(m => data[YEAR][m]?.allocated ?? 0);
const spent     = MONTH_KEYS.map(m => data[YEAR][m]?.spent ?? 0);
const rate      = spent.map((v, i) => {
  const a = allocated[i] || 1;
  return Math.round((v / a) * 1000) / 10; // 소수점 1자리
});

// y축 보기 좋게 여유값
const suggestedMax = Math.max(...allocated, ...spent) * 1.1;
---

<section class="card">
  <div class="card__header">
    <h3>월별 예산 집행 ({YEAR}년)</h3>
    <small class="muted">단위: 원 / 집행율 %</small>
  </div>

  <!-- 고정 높이 래퍼: 차트 크기 안정화 -->
  <div class="chart-wrap">
    <canvas id="budgetChart"></canvas>
  </div>
</section>

<!-- Chart.js CDN -->
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<script is:inline define:vars={{MONTH_LABELS, allocated, spent, rate, suggestedMax}}>
  function mountBudget() {
    const el = document.getElementById('budgetChart');
    if (!el || el._chart) return;

    el._chart = new Chart(el, {
      type: 'bar',
      data: {
        labels: MONTH_LABELS,
        datasets: [
          {
            type: 'bar',
            label: '배정(원)',
            data: allocated,
            yAxisID: 'y',
            borderWidth: 0
          },
          {
            type: 'bar',
            label: '집행(원)',
            data: spent,
            yAxisID: 'y',
            borderWidth: 0
          },
          {
            type: 'line',
            label: '집행율(%)',
            data: rate,
            yAxisID: 'y1',
            borderWidth: 2,
            tension: 0.2
          }
        ]
      },
      options: {
        responsive: true,
        // 래퍼 높이에 맞춰 채우기
        maintainAspectRatio: false,
        interaction: { mode: 'index', intersect: false },
        scales: {
          x: { grid: { display: false } },
          y: {
            beginAtZero: true,
            suggestedMax,
            grid: { display: false },
            ticks: {
              callback: (v) => {
                const n = Number(v);
                if (n >= 100000000) return (n / 100000000) + '억';
                if (n >= 10000)      return (n / 10000) + '만';
                return n.toLocaleString();
              }
            }
          },
          y1: {
            position: 'right',
            beginAtZero: true,
            min: 0,
            max: 120, // 120%까지 여유
            grid: { display: false },
            ticks: { callback: (v) => v + '%' }
          }
        },
        plugins: {
          legend: { position: 'top' },
          tooltip: { intersect: false, mode: 'index' }
        }
      }
    });
  }

  // DOM 렌더 이후 실행 (Astro SPA 내비게이션도 대응)
  document.addEventListener('astro:page-load', mountBudget);
  document.addEventListener('DOMContentLoaded', mountBudget);
</script>

<style>
  .card { width: 100%; max-width: 1400px; padding: 1rem 1.25rem; margin: 0 auto 1.5rem; border-radius: 12px; background: transparent; }
  .card__header { display: flex; align-items: center; gap: .5rem; justify-content: space-between; margin-bottom: .5rem; }
  .muted { opacity: .6; }
  /* 고정 높이 래퍼로 세로 길이 제어 */
  .chart-wrap { width: 100%; height: 500px; }
  canvas { width: 100% !important; height: 100% !important; background: transparent !important; }
</style>
